
/*********************************************
 * Context menu
 *********************************************/
/*
#requestpolicyContextMenu {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-allowed.png);
}

#requestpolicyContextMenu[requestpolicyBlocked="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-blocked.png);
  color: #a00;
}

#requestpolicyContextMenu[requestpolicyPermissive="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-disabled.png);
  color: #d07100;
}
*/

/*********************************************
 * ________________ Overview _________________
 *
 * The menu icon. To be distinguished:
 *  - different icon sizes (16px, 24px, 32px)
 *  - different flag colors:
 *        (note the order. the rule with
 *        the highest number will match.)
 *    (1) red: "default"
 *    (2) grey: nothing blocked
 *    (3) yellow: blocking is disabled
 *    (4) red: requests have been blocked _OR_
 *        the UI is currently being customized
 * Also to be considered:
 *  - different firefox versions
 *    - Australis (Firefox 29)
 *
 *********************************************
 * ___________ detecting Icon Size ___________
 *
 * since Australis:
 *    the size/place of the buttons is detected
 *    via the "cui-areatype" attribute.
 * pre-Australis:
 *    the selector includes the
 * parent toolbar[iconsize="..."]
 *
 *********************************************
 * ___________ customizing the UI ____________
 *
 * the toolbarbutton is wrapped in
 * toolbarpaletteitem[place="..."].
 * Places can be:
 *   palette (32px), panel (32px), toolbar
 * this is the same for Australs and pre-
 * Australis firefox versions.
 *
 *********************************************
 */


/*
 * Case: customizing.
 * ==> red flag.
 * (the !important keyword is necessary.)
 */
toolbarpaletteitem #requestpolicyToolbarButton,
toolbar[iconsize="small"] > toolbarpaletteitem #requestpolicyToolbarButton {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-blocked.png) !important;
}
toolbar[iconsize="large"] > toolbarpaletteitem #requestpolicyToolbarButton {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-24-blocked.png) !important;
}
toolbarpaletteitem[place="palette"] #requestpolicyToolbarButton,
toolbarpaletteitem[place="panel"] #requestpolicyToolbarButton {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-32.png) !important;
}


/*
 * Case: "default" (no other selector matched) and
 * Case: something has been blocked
 * ==> red flag.
 */

/*** Australis only: (the new menu) ***/
/* default: */ #requestpolicyToolbarButton[cui-areatype="menu-panel"],
/* blocked: */ #requestpolicyToolbarButton[cui-areatype="menu-panel"][requestpolicyBlocked="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-32.png);
}
/*** pre-Australis only ***/
/* default: */ toolbar[iconsize="large"] #requestpolicyToolbarButton,
/* blocked: */ toolbar[iconsize="large"] #requestpolicyToolbarButton[requestpolicyBlocked="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-24-blocked.png);
}
/*** "normal" toolbars (16px icons) ***/
/** Australis: **/
/* default: */ #requestpolicyToolbarButton[cui-areatype="toolbar"],
/* blocked: */ #requestpolicyToolbarButton[cui-areatype="toolbar"][requestpolicyBlocked="true"],
/** pre-Australis: **/
/* default: */ toolbar[iconsize="small"] #requestpolicyToolbarButton,
/* blocked: */ toolbar[iconsize="small"] #requestpolicyToolbarButton[requestpolicyBlocked="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-blocked.png);
}


/*
 * Case: nothing has been blocked.
 * ==> grey flag.
 */


/*** Australis only: (the new menu) ***/
/* allowed: */ #requestpolicyToolbarButton[cui-areatype="menu-panel"][requestpolicyBlocked="false"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-32-allowed.png);
}
/*** pre-Australis only ***/
/* allowed: */ toolbar[iconsize="large"] #requestpolicyToolbarButton[requestpolicyBlocked="false"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-24-allowed.png);
}
/*** "normal" toolbars (16px icons) ***/
/** selectors for Australis **/
/* allowed: */ #requestpolicyToolbarButton[cui-areatype="toolbar"][requestpolicyBlocked="false"],
/** selectors for pre-Australis **/
/* allowed: */ toolbar[iconsize="small"] #requestpolicyToolbarButton[requestpolicyBlocked="false"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-allowed.png);
}

/*
 * Case: blocking is disabled.
 * ==> yellow flag.
 */

/*** Australis only: (the new menu) ***/
#requestpolicyToolbarButton[cui-areatype="menu-panel"][requestpolicyPermissive="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-32-disabled.png);
}
/*** pre-Australis only ***/
toolbar[iconsize="large"] #requestpolicyToolbarButton[requestpolicyPermissive="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-24-disabled.png);
}
/*** "normal" toolbars (16px icons) ***/
/** Australis: **/
#requestpolicyToolbarButton[cui-areatype="toolbar"][requestpolicyPermissive="true"],
/** pre-Australis: **/
toolbar[iconsize="small"] #requestpolicyToolbarButton[requestpolicyPermissive="true"] {
  list-style-image:
    url(chrome://requestpolicy/skin/requestpolicy-icon-disabled.png);
}
